---
interface Props {
    id: string;
    type?: "button" | "submit" | "reset";
    style: string;
    text?: string;
    rightIcon?: string;
    leftIcon?: string;
    hasSpacer: boolean;
    borderRadius?: number;
    textSize?: number;
    fontWeight?: number;
    hasRightIcon?: boolean;
    hasLeftIcon?: boolean;
}

class Type {
    constructor(
        private bgColor: string,
        private textColor: string,
        private clickColor?: string
    ) {}

    public getBackgroundColor(): string {
        return this.bgColor;
    }

    public getTextColor(): string {
        return this.textColor;
    }
    
    public getClickColor(): string {
        return this.clickColor;
    }
}

const {
    id,
    type,
    style,
    text,
    rightIcon,
    leftIcon,
    hasSpacer,
    textSize = 24,
    fontWeight = 700,
    hasLeftIcon = leftIcon != null,
    hasRightIcon = rightIcon != null,
} = Astro.props;
const types = {
    positive: new Type("bg-action", "text-highlight", "active:bg-[#006680]"),
    neutral: new Type("bg-highlight", "text-text", "active:bg-[#c5faef]"),
    destructive: new Type("bg-[#f49531]", "text-text", "active:bg-[#f16c64]"),
    disable: new Type("bg-[#374843]", "text-highlight", "active:bg-[#212b28]"),
};
---

<button
    class=`${types[style].getBackgroundColor()} ${types[style].getClickColor()} rounded-[20px] border-solid border-text border-4 pt-[18px] pr-5 pb-[18px] pl-5 flex flex-row gap-5 items-center justify-start shrink-0 relative self-stretch hover:shadow-2xl`
    id={id}
    type={type}
>
    <img
        class=`flex flex-row gap-2.5 items-start justify-start shrink-0 relative overflow-visible ${hasLeftIcon ? "visible" : "hidden"}`
        src={leftIcon}
    />

    <div
        class=`flex flex-row items-center justify-between self-stretch flex-1 relative ${hasSpacer ? "visible": "hidden"}`
    >
    </div>

    <div
        class=`${types[style].getTextColor()} text-left relative font-montserrat`
        style=`font-size: ${textSize}px; font-weight: ${fontWeight}`
    >
        {text}
    </div>

    <div
        class=`flex flex-row items-center justify-between self-stretch flex-1 relative ${hasSpacer ? "visible": "hidden"}`
    >
    </div>

    <img
        class=`flex flex-row gap-2.5 items-start justify-start shrink-0 relative overflow-visible ${hasRightIcon ? "visible" : "hidden"}`
        src={rightIcon}
    />
</button>
